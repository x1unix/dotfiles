# vim: set filetype=tmux :

#############################
# Shared tmux configuration #
#############################

# Color output
set -g default-terminal 'xterm-256color'

# Fix for kitty/sixel
set -g allow-passthrough on
set -ga update-environment TERM
set -ga update-environment TERM_PROGRAM

# tmux-prefix-highlight
set -g status-right "#{prefix_highlight} \"#{=22:pane_title}\" %H:%M %d-%b-%y"

# Mouse scroll
set -g mouse on

# Start window and pane indices at 1.
set -g base-index 1
set -g pane-base-index 1

# Appearance
set -g status-bg "#cccccc"
set-option -sg escape-time 10
set-option -g focus-events on
set-option -sa terminal-overrides ',XXX:RGB'

# Highlight the active window in the status bar.
set-window-option -g window-status-current-style bg=yellow,fg=black

# Don't prompt to kill panes/windows.
bind-key x kill-pane
bind-key & kill-window

# Cycle panes.
bind b select-pane -t :.+
bind C-b select-pane -t :.+

# address vim mode switching delay (http://superuser.com/a/252717/65504)
set -s escape-time 0
set -g history-limit 5000

# Set new panes to open in current directory
bind c new-window -c "#{pane_current_path}"
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

# Clear screen + scrollback on Ctrl+l
bind-key -n C-l send-keys 'C-l'\; clear-history

# reload config
bind r source-file ~/.tmux.conf \; display "Config reloaded!"

# tabs
bind w choose-tree -Zw
bind q kill-pane
bind Q kill-window

# select session
bind W choose-session

# shortcut to command mode
bind \; command-prompt

# copy mode
bind / copy-mode
bind Escape copy-mode
bind p paste-buffer

# vim motions: copy mode
setw -g mode-keys vi
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel "#{@g_cmd_clipcopy}"
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel "#{@g_cmd_clipcopy}"
unbind -T copy-mode-vi Space
bind -T copy-mode-vi Space send -X jump-again
bind-key -T copy-mode-vi 0 send -X back-to-indentation

bind y run 'tmux save-buffer - | #{@g_cmd_clipcopy}'
bind C-y run 'tmux save-buffer - | #{@g_cmd_clipcopy}'

# vim motions: splits
bind -r h select-pane -L
bind -r j select-pane -D
bind -r k select-pane -U
bind -r l select-pane -R

# bind -r H swap-pane -L
bind -r J swap-pane -D
bind -r K swap-pane -U
# bind -r L swap-pane -R

# vim-like: resize splits
bind -r + resize-pane -U 5
bind -r - resize-pane -D 5
bind -r < resize-pane -L 5
bind -r > resize-pane -R 5

# vim-like: make splits
bind s split-window -v -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"

# vim-like: tabs
bind [ previous-window
bind ] next-window

# floating terminal
bind '`' if-shell -F '#{==:#{session_name},floating}' {
    detach-client
} {
    display-popup -E -w 80% -h 67% "tmux new-session -A -s floating"
}

# statusbar
set -g status on
set -g status-interval 5
set -g status-position bottom
set -g status-justify left

# Status bar colors
set -g status-style bg=colour234,fg=colour255

# Left side of status bar
set -g status-left-length 40
set -g status-left "#[fg=colour255,bg=colour24,bold] #S #[fg=colour24,bg=colour240,nobold]#[fg=colour255,bg=colour240] #(whoami) #[fg=colour240,bg=colour234]"

# Right side of status bar
set -g status-right-length 150
set -g status-right "#[fg=colour240,bg=colour234]#[fg=colour255,bg=colour240] %H:%M #[fg=colour24,bg=colour240]#[fg=colour255,bg=colour24,bold] %Y-%m-%d "

# Window status format
set -g window-status-format "#[fg=colour234,bg=colour240]#[fg=colour255,bg=colour240] #I:#W #[fg=colour240,bg=colour234]"
set -g window-status-current-format "#[fg=colour234,bg=colour31]#[fg=colour255,bg=colour31,bold] #I:#W #[fg=colour31,bg=colour234,nobold]"

# Window separator
set -g window-status-separator ""

# Pane border colors
set -g pane-border-style fg=colour240
set -g pane-active-border-style fg=colour31

# Message style
set -g message-style bg=colour154,fg=colour232,bold

# Clock mode
set -g clock-mode-colour colour154
